{"version":3,"sources":["context.js","components/TodoItem.js","components/TodoList.js","Loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","bind","ul","listStyle","margin","TodoList","props","todos","map","onToggle","propType","PropTypes","arrayOf","object","isRequired","func","Modal","state","isOpen","Fragment","setState","this","viewBox","d","marginTop","Component","AddTodo","lazy","Promise","resolve","setTimeout","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","Loader","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.397f3137.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context","import React, {useContext} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Context from \"../context\";\r\n\r\nconst styles = {\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '.5rem 1rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '4px',\r\n        marginBottom: '.5rem',\r\n    },\r\n    input: {\r\n        marginRight: '1rem'\r\n    }\r\n}\r\n\r\nfunction TodoItem({ todo, index, onChange}) {\r\n    const { removeTodo } = useContext(Context)\r\n    const classes = []\r\n\r\n    if (todo.completed) {\r\n        classes.push('done')\r\n    }\r\n    return (\r\n        <li style={styles.li}>\r\n            <span className={classes.join(' ')}>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={todo.completed}\r\n                    style={styles.input}\r\n                    onChange={() => onChange(todo.id)}\r\n                />\r\n                 <strong>{index + 1}</strong>\r\n                &nbsp;\r\n                {todo.title}\r\n            </span>\r\n\r\n            <button className='rm' onClick={removeTodo.bind(null, todo.id)}>\r\n                &times;\r\n            </button>\r\n        </li>\r\n    );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoItem","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}\r\n\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            { props.todos.map((todo, index) => {\r\n                return <TodoItem\r\n                    todo={todo}\r\n                    key={todo.id}\r\n                    index={index}\r\n                    onChange={props.onToggle}\r\n                />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propType = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList","import React from \"react\";\r\n\r\nexport default () => (\r\n    <div style={{display: 'flex', justifyContent: 'center', margin: '.5rem'}}>\r\n        <div className=\"lds-dual-ring\"/>\r\n    </div>\r\n)","import React from \"react\";\r\nimport './Modal.css'\r\n\r\nexport default class Modal extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button onClick={() => this.setState({ isOpen: true})}>Click here!</button>\r\n\r\n                {this.state.isOpen && (<div className='modal'>\r\n                    <div className='modal-body'>\r\n                        <h1>Nice to see you!</h1>\r\n                        <span className='text'> I </span>\r\n\r\n                        <svg className=\"heart\" viewBox=\"0 0 32 29.6\">\r\n                            <path d=\"M23.6,0c-3.4,0-6.3,2.7-7.6,5.6C14.7,2.7,11.8,0,8.4,0C3.8,0,0,3.8,0,8.4c0,9.4,9.5,11.9,16,21.2\r\n\tc6.1-9.3,16-12.1,16-21.2C32,3.8,28.2,0,23.6,0z\"/>\r\n                        </svg>\r\n\r\n                        <span className='text'>You</span>\r\n                        <div><button style={{marginTop: '40px'}} onClick={() => this.setState({ isOpen: false})}>Bye-Bye!</button></div>\r\n                    </div>\r\n                </div>)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, {useEffect} from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport Context from \"./context\";\nimport Loader from \"./Loader\";\nimport Modal from \"./Modal/Modal\";\n\nconst AddTodo = React.lazy(() => new Promise(resolve => {\n    setTimeout(() => {\n        resolve(import('./components/AddTodo'))\n    }, 1000)\n}))\n\nfunction App() {\n    const [todos, setTodos] = React.useState( []);\n    const [loading, setLoading] = React.useState(true)\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n            .then(response => response.json())\n            .then(todos => {\n                setTimeout(() => {\n                    setTodos(todos)\n                    setLoading(false)\n                }, 1000)\n            })\n    }, [])\n\n    function toggleTodo(id) {\n        setTodos(\n            todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed\n                }\n                return todo;\n            })\n        )\n    }\n\n    function removeTodo(id) {\n        setTodos(todos.filter(todo => todo.id !== id))\n    }\n\n    function addTodo(title) {\n        setTodos(\n            todos.concat([\n                {\n                    title,\n                    id: Date.now(),\n                    completed: false,\n                }\n           ])\n        )\n    }\n\n  return (\n      <Context.Provider value={{ removeTodo }}>\n          <div className='wrapper'>\n              <h1>ToDo</h1>\n              <Modal/>\n              <React.Suspense fallback={<p>Loading...</p>}>\n                 <AddTodo onCreate={addTodo}/>\n              </React.Suspense>\n\n              {loading && <Loader/>}\n\n              {todos.length ? (\n                  <TodoList todos={todos} onToggle={toggleTodo}/>\n              ) : (\n                  loading ? null : <p>No todos!</p>\n              )}\n          </div>\n      </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}